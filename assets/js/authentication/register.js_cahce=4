console.log("%c myCenter", "color: #3BA4FF; background-color: #F4F4F4; font-size: 30pt; padding-left: 15%; padding-right: 15%;")
console.log("%c Careful! Typing things here without knowing what you are doing could cause attackers to gain access to your account. We do not recommend using this panel unless you know what you're doing. Just because someone says they are who they are, does not mean they are who they are. Only type stuff here if our Customer Service team tells you to in a ticket; if someone tells you to outside of one please make a ticket and report the user; they may be trying to steal your account.", "color: #FF0000; background-color: #F4F4F4; font-size: 15pt; padding-left: 15%; padding-right: 15%;")


/*
myCenter
register.js for myCenter Darkbright
Created by Matthew W#5940
*/

const begin = document.getElementById("begin");
const username = document.getElementById("username");
const password = document.getElementById("password");
const confirm_password = document.getElementById("confirm_password");
const register_button = document.getElementById("register_button");

const urlParams = new URLSearchParams(window.location.search);

function request(url, method, headers, body, cb) {
    if (method == "GET") {
        fetch(url, {
            method: method,
            headers: headers,
            credentials: "include"
        }).then(response => response.json()).then(json => {
            cb(json)
        });
    } else {
        fetch(url, {
            method: method,
            headers: headers,
            body: body,
            credentials: "include"
        }).then(response => response.json()).then(json => {
            cb(json)
        });
    }
}

register_button.addEventListener("click", function () {
    if (confirm_password.value == password.value) {
        register_button.disabled = true;
        document.getElementById("begin").classList.add("hide");
        document.getElementById("pick").classList.remove("hide");


        document.getElementById("game").addEventListener("click", () => {
            //grecaptcha.execute('6LfsI8IUAAAAANaZQDmeE8BVxYpXnWxC1DKilD42', { action: 'register_game' }).then(function (token) {
                request("https://darkbrightapi."+window.location.host+"/auth/register", "POST", { "Content-Type": "application/json" }, JSON.stringify({
                    captcha: "token",
                    username: username.value
                }), function (register_start_result) {
                    if (register_start_result.success) {
                        const step1 = document.getElementById("game-step-1");
                        const step2 = document.getElementById("game-step-2");
                        const validate = document.getElementById("validate_game");
                        const verificationcode = document.getElementById("verificationcode");
                        const step3 = document.getElementById("game-step-3");
                        document.getElementById("pick").classList.add("hide");
                        validate.classList.remove("hide");

                        verificationcode.innerHTML = register_start_result.verificationCode;

                        const poll = setInterval(function () {
                            request("https://darkbrightapi."+window.location.host+"/auth/register/poll/" + register_start_result.verificationCode, "GET", {}, "", function (poll_result) {
                                if (poll_result.success) {
                                    if (poll_result.stage == 0) {//Waiting to join game
                                        //make sure stage one is open

                                        if (validate.classList.contains("hide")) {
                                            validate.classList.remove("hide");
                                        }
                                    } else if (poll_result.stage == 1) {//Player in game
                                        if (step2.classList.contains("hide")) {
                                            step2.classList.remove("hide");
                                            step1.classList.add("hide");
                                        }
                                    } else if (poll_result.stage == 2) {//Verified, create account. [hey smart person about to try to abuse this, we do verify the verification code on server :-)]
                                        if (step3.classList.contains("hide")) {
                                            step3.classList.remove("hide");
                                            step2.classList.add("hide");
                                            //fire once..
                                            clearInterval(poll);

                                            request("https://darkbrightapi."+window.location.host+"/auth/register/finish", "POST", { "Content-Type": "application/json" }, JSON.stringify({
                                                verificationId: register_start_result.verificationCode,
                                                id: register_start_result.robloxId,
                                                password: password.value
                                            }), function (finish_register) {
                                                if (finish_register.success) {
                                                    if (urlParams.has("redir")) {
                                                        document.location.replace(urlParams.get("redir"))
                                                    } else {
                                                        document.location.replace("/dashboard")
                                                    }
                                                } else {
                                                    register_button.disabled = false;
                                                    swal.fire("Something went wrong", finish_register.reason, "error")
                                                }
                                            })
                                        }
                                    }
                                } else {
                                    register_button.disabled = false;
                                    swal.fire("Something went wrong", register_start_result.reason, "error")
                                    clearInterval(poll);
                                }
                            })
                        }, 2500)
                    } else {
                        register_button.disabled = false;
                        swal.fire("Something went wrong", register_start_result.reason, "error")
                    }
                })
            //})
        })

        document.getElementById("code").addEventListener("click", () => {
            //grecaptcha.execute('6LfsI8IUAAAAANaZQDmeE8BVxYpXnWxC1DKilD42', { action: 'register_code' }).then(function (token) {
                request("https://darkbrightapi."+window.location.host+"/auth/register/code", "POST", { "Content-Type": "application/json" }, JSON.stringify({
                    captcha: "token",
                    username: username.value
                }), function (register_start_result) {
                    if (register_start_result.success) {
                        const step1 = document.getElementById("code-step-1");
                        const step2 = document.getElementById("code-step-2");
                        const validate = document.getElementById("validate_code");
                        const verificationcode = document.getElementById("code-verificationcode");
                        const step3 = document.getElementById("code-step-3");
                        document.getElementById("pick").classList.add("hide");
                        validate.classList.remove("hide");

                        verificationcode.innerHTML = register_start_result.verificationCode;

                        document.getElementById("goback_code").addEventListener("click", () => {
                            step1.classList.remove("hide");
                            step2.classList.add("hide");
                        })

                        document.getElementById("nextpage_code").addEventListener("click", () => {
                            step1.classList.add("hide");
                            step2.classList.remove("hide");
                        })

                        document.getElementById("ValidateProfile").addEventListener("click", () => {
                            request("https://darkbrightapi."+window.location.host+"/auth/register/code/finish", "POST", { "Content-Type": "application/json" }, JSON.stringify({
                                verificationId: register_start_result.verificationCode,
                                id: register_start_result.robloxId,
                                password: password.value
                            }), function (finish_register) {
                                if (finish_register.success) {
                                    if (urlParams.has("redir")) {
                                        document.location.replace(urlParams.get("redir"))
                                    } else {
                                        document.location.replace("/dashboard")
                                    }
                                } else {
                                    register_button.disabled = false;
                                    swal.fire("Something went wrong", finish_register.reason, "error")
                                }
                            })
                        })


                    } else {
                        register_button.disabled = false;
                        swal.fire("Something went wrong", register_start_result.reason, "error")
                    }
                })
            //})
        })

    } else {
        swal.fire("Something went wrong", "The passwords must match..", "error")
    }
})

//jesus loves you :) ~ matthew
